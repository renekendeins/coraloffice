# Generated by Django 5.0.2 on 2025-05-29 22:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('country', models.CharField(choices=[('US', 'United States'), ('CA', 'Canada'), ('GB', 'United Kingdom'), ('FR', 'France'), ('DE', 'Germany'), ('IT', 'Italy'), ('ES', 'Spain'), ('PT', 'Portugal'), ('NL', 'Netherlands'), ('BE', 'Belgium'), ('CH', 'Switzerland'), ('AT', 'Austria'), ('SE', 'Sweden'), ('NO', 'Norway'), ('DK', 'Denmark'), ('FI', 'Finland'), ('AU', 'Australia'), ('NZ', 'New Zealand'), ('JP', 'Japan'), ('KR', 'South Korea'), ('CN', 'China'), ('IN', 'India'), ('BR', 'Brazil'), ('AR', 'Argentina'), ('MX', 'Mexico'), ('RU', 'Russia'), ('ZA', 'South Africa'), ('EG', 'Egypt'), ('TH', 'Thailand'), ('ID', 'Indonesia'), ('MY', 'Malaysia'), ('SG', 'Singapore'), ('PH', 'Philippines'), ('VN', 'Vietnam'), ('OTHER', 'Other')], default='OTHER', max_length=10)),
                ('language', models.CharField(choices=[('EN', 'English'), ('ES', 'Spanish'), ('FR', 'French'), ('DE', 'German'), ('IT', 'Italian'), ('PT', 'Portuguese'), ('RU', 'Russian'), ('ZH', 'Chinese'), ('JA', 'Japanese'), ('OTHER', 'Other')], default='EN', max_length=10)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('certification_level', models.CharField(choices=[('NONE', 'No certification'), ('BEGINNER', 'Beginner'), ('OPEN_WATER', 'Open Water'), ('ADVANCED_OPEN_WATER', 'Advanced Open Water'), ('RESCUE_DIVER', 'Rescue Diver'), ('DIVEMASTER', 'Divemaster'), ('INSTRUCTOR', 'Instructor')], default='NONE', max_length=50)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('medical_conditions', models.TextField(blank=True)),
                ('weight', models.FloatField(blank=True, help_text='Weight in kg', null=True)),
                ('height', models.FloatField(blank=True, help_text='Height in cm', null=True)),
                ('foot_size', models.FloatField(blank=True, help_text='Foot size (EU)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diving_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DiveActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('duration_minutes', models.IntegerField(default=60)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diving_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dive_activities', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DivingGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(choices=[('US', 'United States'), ('CA', 'Canada'), ('GB', 'United Kingdom'), ('FR', 'France'), ('DE', 'Germany'), ('IT', 'Italy'), ('ES', 'Spain'), ('PT', 'Portugal'), ('NL', 'Netherlands'), ('BE', 'Belgium'), ('CH', 'Switzerland'), ('AT', 'Austria'), ('SE', 'Sweden'), ('NO', 'Norway'), ('DK', 'Denmark'), ('FI', 'Finland'), ('AU', 'Australia'), ('NZ', 'New Zealand'), ('JP', 'Japan'), ('KR', 'South Korea'), ('CN', 'China'), ('IN', 'India'), ('BR', 'Brazil'), ('AR', 'Argentina'), ('MX', 'Mexico'), ('RU', 'Russia'), ('ZA', 'South Africa'), ('EG', 'Egypt'), ('TH', 'Thailand'), ('ID', 'Indonesia'), ('MY', 'Malaysia'), ('SG', 'Singapore'), ('PH', 'Philippines'), ('VN', 'Vietnam'), ('OTHER', 'Other')], default='OTHER', max_length=10)),
                ('contact_person', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True)),
                ('arrival_date', models.DateField(blank=True, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diving_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diving_groups', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DivingSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('depth_min', models.FloatField(help_text='Minimum depth in meters')),
                ('depth_max', models.FloatField(help_text='Maximum depth in meters')),
                ('difficulty_level', models.CharField(choices=[('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced'), ('EXPERT', 'Expert')], default='BEGINNER', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('special_requirements', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diving_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diving_sites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DiveSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('max_participants', models.IntegerField(default=46)),
                ('description', models.TextField(blank=True)),
                ('special_notes', models.TextField(blank=True, help_text='Special requirements or important notes for this dive')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.diveactivity')),
                ('diving_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dive_schedules', to=settings.AUTH_USER_MODEL)),
                ('dive_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_dives', to='users.divingsite')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('WETSUIT', 'Wetsuit'), ('BCD', 'BCD'), ('REGULATOR', 'Regulator'), ('FINS', 'Fins'), ('MASK', 'Mask'), ('BOOTS', 'Boots'), ('TANK', 'Tank'), ('WEIGHT', 'Weight'), ('OTHER', 'Other')], max_length=20)),
                ('size', models.CharField(choices=[('XS', 'Extra Small'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra Large'), ('XXL', 'Extra Extra Large'), ('N/A', 'Not Applicable')], default='N/A', max_length=10)),
                ('quantity_total', models.IntegerField(default=1)),
                ('quantity_available', models.IntegerField(default=1)),
                ('condition', models.CharField(choices=[('EXCELLENT', 'Excellent'), ('GOOD', 'Good'), ('FAIR', 'Fair'), ('POOR', 'Poor'), ('OUT_OF_SERVICE', 'Out of Service')], default='GOOD', max_length=20)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('last_maintenance', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diving_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('avatar', models.URLField(blank=True)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('is_diving_center', models.BooleanField(default=False)),
                ('business_name', models.CharField(blank=True, max_length=100)),
                ('business_license', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerDiveActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tank_size', models.CharField(choices=[('10L', '10 Liters'), ('12L', '12 Liters'), ('15L', '15 Liters'), ('18L', '18 Liters')], default='12L', max_length=10)),
                ('needs_wetsuit', models.BooleanField(default=False)),
                ('needs_bcd', models.BooleanField(default=False)),
                ('needs_regulator', models.BooleanField(default=False)),
                ('needs_guide', models.BooleanField(default=False)),
                ('needs_insurance', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('DEPARTED', 'Departed'), ('FINISHED', 'Finished')], default='PENDING', max_length=20)),
                ('has_arrived', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dive_activities', to='users.customer')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_bookings', to='users.diveactivity')),
                ('dive_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_activities', to='users.diveschedule')),
            ],
            options={
                'unique_together': {('customer', 'dive_schedule')},
            },
        ),
        migrations.CreateModel(
            name='DivingGroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_leader', models.BooleanField(default=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to='users.customer')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='users.divinggroup')),
            ],
            options={
                'unique_together': {('group', 'customer')},
            },
        ),
    ]
