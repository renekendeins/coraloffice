# Generated by Django 5.0.2 on 2025-06-02 19:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0007_alter_customer_country_alter_customer_language_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('course_type', models.CharField(choices=[('OPEN_WATER', 'Open Water Diver'), ('ADVANCED_OPEN_WATER', 'Advanced Open Water'), ('RESCUE_DIVER', 'Rescue Diver'), ('DIVEMASTER', 'Divemaster'), ('INSTRUCTOR', 'Instructor Development Course'), ('NITROX', 'Nitrox Specialty'), ('DEEP', 'Deep Diver Specialty'), ('WRECK', 'Wreck Diver Specialty'), ('NIGHT', 'Night Diver Specialty'), ('NAVIGATION', 'Underwater Navigation'), ('PHOTOGRAPHY', 'Underwater Photography'), ('CUSTOM', 'Custom Course')], default='CUSTOM', max_length=30)),
                ('description', models.TextField(blank=True)),
                ('total_dives', models.IntegerField(default=1, help_text='Total number of dives in this course')),
                ('duration_days', models.IntegerField(default=1, help_text='Estimated duration in days')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('prerequisites', models.TextField(blank=True, help_text='Required certifications or prerequisites')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diving_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ENROLLED', 'Enrolled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('ON_HOLD', 'On Hold')], default='ENROLLED', max_length=20)),
                ('enrollment_date', models.DateField(auto_now_add=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('certificate_number', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('price_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='users.course')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_enrollments', to='users.customer')),
                ('instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_enrollments', to='users.staff')),
            ],
            options={
                'ordering': ['-enrollment_date'],
                'unique_together': {('customer', 'course')},
            },
        ),
        migrations.CreateModel(
            name='CourseSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_number', models.IntegerField(help_text='Session number in the course (1, 2, 3, etc.)')),
                ('session_type', models.CharField(choices=[('THEORY', 'Theory Session'), ('POOL', 'Pool Dive'), ('OPEN_WATER', 'Open Water Dive'), ('EXAM', 'Exam'), ('PRACTICAL', 'Practical Skills')], default='OPEN_WATER', max_length=20)),
                ('title', models.CharField(help_text="Session title (e.g., 'Pool Skills', 'Navigation Dive')", max_length=100)),
                ('description', models.TextField(blank=True)),
                ('skills_covered', models.TextField(blank=True, help_text='Skills to be practiced in this session')),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('RESCHEDULED', 'Rescheduled')], default='SCHEDULED', max_length=20)),
                ('scheduled_date', models.DateField(blank=True, null=True)),
                ('scheduled_time', models.TimeField(blank=True, null=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, help_text='Grade or pass/fail result', max_length=10)),
                ('instructor_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dive_schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_sessions', to='users.diveschedule')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_sessions', to='users.courseenrollment')),
                ('instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_sessions', to='users.staff')),
            ],
            options={
                'ordering': ['enrollment', 'session_number'],
                'unique_together': {('enrollment', 'session_number')},
            },
        ),
        migrations.AddField(
            model_name='customerdiveactivity',
            name='course_session',
            field=models.ForeignKey(blank=True, help_text='Course session if this dive is part of a course', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dive_activities', to='users.coursesession'),
        ),
    ]
